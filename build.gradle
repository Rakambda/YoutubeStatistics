buildscript {
    ext {
        slf4j_version = '2.0.0-alpha1'
        logback_version = '1.3.0-alpha5'
        picocli_version = '4.5.1'
        jackson_version = '2.11.2'
        youtube_api_version = 'v3-rev20200618-1.30.9'
        google_api_version = '1.30.10'
        google_oauth_version = '1.31.0'
        progressbar_version = '0.8.1'
        threeten_version = '1.5.0'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'com.github.ben-manes.versions' version '0.33.0'
    id 'java'
    id 'application'
    id 'io.freefair.lombok' version '5.2.1'
}

group = 'fr.raksrinana'
description = 'YouTubeStatistics'
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_14

mainClassName = project.mainClass

dependencies {
    implementation("org.slf4j:slf4j-api:${slf4j_version}")
    implementation("ch.qos.logback:logback-classic:${logback_version}") {
        exclude group: 'edu.washington.cs.types.checker', module: 'checker-framework'
        exclude group: 'javax.activation', module: 'activation'
    }

    implementation("com.fasterxml.jackson.core:jackson-core:${jackson_version}")
    implementation("com.fasterxml.jackson.core:jackson-annotations:${jackson_version}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${jackson_version}")

    implementation("info.picocli:picocli:${picocli_version}")
    implementation("me.tongfei:progressbar:${progressbar_version}") {
        exclude group: 'org.jline', module: 'jline'
    }

    implementation("org.threeten:threeten-extra:${threeten_version}")

    implementation("com.google.api-client:google-api-client:${google_api_version}")
    implementation("com.google.oauth-client:google-oauth-client-jetty:${google_oauth_version}")
    implementation("com.google.apis:google-api-services-youtube:${youtube_api_version}")
}

repositories {
    jcenter()
    mavenCentral()
}

processResources {
    expand project.properties
}

application {
    mainModule = project.moduleName
    mainClass = project.mainClass
}

java {
    modularity.inferModulePath.set(true)
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath,
        ]
        classpath = files()
    }
}

shadowJar {
    archivesBaseName = project.name
    archiveClassifier = 'shaded'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.deprecation = true
}

tasks.withType(Wrapper) {
    gradleVersion = project.wrapper_version
}
